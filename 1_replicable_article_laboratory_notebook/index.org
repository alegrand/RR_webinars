#+TITLE:     Introduction, producing replicable articles and managing a laboratory notebook with emacs/org-mode
#+AUTHOR:    Arnaud Legrand
#+DATE: March 7, 2016
#+STARTUP: overview indent


*This seminar took place on March 7, 2016. The link to the video is below. Do not forget to check the section on [[file:index.org#practical-session-requirements][software installation]] if
you want to test yourself the demoed tools.*

* Table of Contents                                                     :TOC:
- [[#practical-information][Practical information]]
  - [[#webcastvideo][Webcast/Video]]
  - [[#persons-in-charge][Persons in charge]]
  - [[#locations][Locations]]
- [[#practical-session-requirements][Practical Session Requirements]]
  - [[#installing-emacs-ess-auctex-][Installing emacs, ess, auctex, ...]]
  - [[#a-stub-of-replicable-article][A stub of replicable article]]
  - [[#reproducible-research-emacs-configuration-for-maintaining-your-laboratory-notebook][Reproducible research emacs configuration for maintaining your laboratory notebook]]
  - [[#a-few-information-on-how-to-play-with-jupyteripython][A few information on how to play with jupyter/ipython]]
  - [[#a-few-information-on-how-to-play-with-rstudio][A few information on how to play with Rstudio]]

* Practical information
[[https://team.inria.fr/polaris/members/arnaud-legrand/][Arnaud Legrand]] gave a [[https://github.com/alegrand/SMPE/raw/master/lectures/talk_16_03_07_Webinar.pdf][general introduction on reproducible research]].
** Webcast/Video
Here is the *[[https://gricad.univ-grenoble-alpes.fr/video/introduction-producing-replicable-articles-and-managing-laboratory-notebook-emacsorg-mode][link to the video]]*. If you have any trouble with the
flashplayer, here is a *[[http://newstream.u-ga.fr/2016-03-07_Reproducible-Research_Arnaud-legrand.mp4][direct link to the mpeg4 video]]*. The *slides* are
available [[https://github.com/alegrand/SMPE/raw/master/lectures/talk_16_03_07_Webinar.pdf][here]].

#+BEGIN_CENTER
[[https://gricad.univ-grenoble-alpes.fr/video/introduction-producing-replicable-articles-and-managing-laboratory-notebook-emacsorg-mode][file:video_thn.png]]
#+END_CENTER

To interact during the presentation (questions, comments), *we used
this [[https://pad.inria.fr/p/9mSyf4BhzZ9soDE9][pad]]* that we [[file:pad.org][keep for the record]].
** Persons in charge
   - Grenoble: Arnaud Legrand, Frédéric Desprez
   - Bordeaux: Luka Stanisic, Emmanuel Agullo, Nicolas P. Rougier,
     Ludovic Courtès
   - Rennes: Martin Quinson
   - Paris: Roberto Di Cosmo
   - Toulouse: Matthieu Roy
   - TU Vienne: Louis-Claude Canon
   - Orléans: Konrad Hinsen
** Locations
   - Grenoble: [[https://www.google.com/maps/d/u/0/viewer?mid=zYJixSyqUx3w.kZRnKm__28GY&hl=fr][MJK]] (Arnaud Legrand), GIANT (Frédéric Desprez), Inria A103 (Pierre Neyron), ...
   - Lyon: ENS Lyon, salle du conseil (Loris Marchal)
   - Bordeaux: Ada Lovelace room (Ludovic Courtès)
   - Rennes: salle visio Bréhat (Martin Quinson)
   - Paris: salle visio Cantor (Roberto Di Cosmo)
   - ...
* Practical Session Requirements
*Edit:* This section was edited on February 2018 and on July 2019 to
keep it up-to-date with more recent versions of org-mode and
others. Feel free to navigate in the history to obtain the version
originally used in March 2016.

*Warning:* I try maintain with some colleagues an extended, up-to-date
and somehow similar set of instructions [[https://gitlab.inria.fr/learninglab/mooc-rr/mooc-rr-ressources/blob/master/module2/ressources/emacs_orgmode.org][here]] for the [[https://learninglab.inria.fr/en/mooc-recherche-reproductible-principes-methodologiques-pour-une-science-transparente/][Reproducible
Research MOOC]]. This is what I really recommend to follow now.

*Warning':* This tuturial relies on *org-mode 9*.

  We will explain the audience how to create and manage replicable
  articles and give advice on how to manage a laboratory notebook on a
  daily basis. 

  To benefit from this presentation, we recommend the audience to
  install the software described in each section. In particular, we
  want a recent version of emacs with ESS (for R) and AucTeX (for
  LaTeX). Finally, *you will need a working LaTeX and R environment to
  build a replicable article*.
  #+BEGIN_CENTER
  *Once you're done with the software installation that are specific to
  your operating system, go to this [[#reproducible-research-emacs-configuration-for-maintaining-your-laboratory-notebook][section]].*
  #+END_CENTER
** Installing emacs, ess, auctex, ...
*** Mac OS X
- *Option 1*: Install the =.dmg= file from [[http://vgoulet.act.ulaval.ca/][Vincent Goulet]]:
  https://vigou3.github.io/emacs-modified-macos/. It ships with recent
  versions:
  - Emacs 25.3
  - ESS 17.11
  - org-mode 9.1.6
  In that case you may have several versions of emacs installed on
  your machine and launching emacs from a terminal may not run the one
  you just installed. If anyone know how to get rid of this...
- *Option 2*: If you already use =brew=, simply do the following
  #+begin_src sh :results output :exports both
  brew update
  brew install emacs [--with-cocoa]
  brew linkapps emacs
  brew tap homebrew/science
  brew install ess
  brew install auctex # The name may be slightly more complicated here
  brew install wget
  #+end_src
*** Windows
Install the =.exe= file from [[http://vgoulet.act.ulaval.ca/][Vincent Goulet]]:
https://vigou3.github.io/emacs-modified-windows/. It ships with recent
versions:
- Emacs 25.3
- ESS 17.11
- org-mode 9.1.6
*** Linux
If you're running a debian system, simply do (as root):
#+begin_src sh :results output :exports both
apt-get update ; apt-get install emacs org-mode ess r-base auctex
#+end_src

Then make sure you have a sufficiently recent version
#+begin_src sh :results output :exports both
emacs --version 2>&1 | head -n 1
#+end_src

#+RESULTS:
: GNU Emacs 25.2.2

I'd say you want at least an emacs 24.4 (October 2014) or 24.5
(April 2015) to be out of troubles. Emacs 24.3 was released in March
2013, i.e., three years ago, which is quite old. 

Likewise, you'll want to check you have a recent version of org-mode:
#+begin_src sh :results output :exports both
emacs -batch --funcall "org-version" 2>&1 | grep version
#+end_src

#+RESULTS:
: Org mode version 9.0.3 (9.0.3-dist @ /usr/share/emacs25/site-lisp/org-mode/)

_You really want to make sure you do not rely on org-mode 8_, which is
becoming deprecated. If you have to stay with this particular version,
browse the history of this repository to obtain emacs configuration
and files that are compatible with org-mode 8.
** A stub of replicable article
Remember, you need a working LaTeX and R environment. If you can't
open a terminal and run the commands =R= and =pdflatex=, you will not be
able to generate this document. The article downloads the
corresponding LaTeX packages so you also need to have a working =wget=
command (alternatively, you can use =curl=). You may still read the
source ([[file:replicable/article.org][article.org]]) and understand how it works though.

Download the [[https://github.com/alegrand/RR_webinars/raw/master/1_replicable_article_laboratory_notebook/replicable/replicable.tgz][archive]], untar it and simply make to generate the
article. You should then be able to open the [[file:replicable/article.pdf][resulting article]]. This
is summarized in the following command:
#+begin_src sh :results output :exports both
wget --no-check-certificate -O replicable.tgz https://github.com/alegrand/RR_webinars/raw/master/1_replicable_article_laboratory_notebook/replicable/replicable.tgz
tar zxf replicable.tgz; cd replicable; make ; evince article.pdf
#+end_src

If the =make= command fails (especially on Mac), it may be because emacs
or something else is not correctly installed. In that case, open the
article directly with the following command:
#+begin_src sh :results output :exports both
emacs -q --eval "(setq enable-local-eval t)" --eval "(setq enable-local-variables t)"  article.org
#+end_src
and export it to pdf with the following shortcut: =C-c C-e l o=

If it still doesn't work and emacs complains about not finding ESS, it
may be because you installed ESS in your home instead of
system-wide. In that case, try to remove the =-q= in the previous
command line to load your personal emacs configuration.

Finally, when you'll be tired of always reexecuting all the source
code when exporting, just look for the following line in [[file:replicable/article.org][article.org]]:
#+BEGIN_EXAMPLE
# #+PROPERTY: header-args :eval never-export
#+END_EXAMPLE
If you remove the =# = in the beginning of the line, it will not be a
comment anymore and will indicate org-mode to stop evaluating every
chunck of code when exporting.
** Reproducible research emacs configuration for maintaining your laboratory notebook
*** Step 1: Prepare your journal
Create an =org/= directory in the top of your home:
#+begin_src sh :results output :exports both
mkdir -p ~/org/
#+end_src
Then copy [[https://raw.githubusercontent.com/alegrand/RR_webinars/master/1_replicable_article_laboratory_notebook/journal.org][this file]] in the =~/org/= directory. This file will be your
laboratory notebook and all the notes you will capture with =C-c c= (this
will be explained in the tutorial) will go automatically go in this
file. I populated the first entry of this notebook with many emacs
shortcuts that I will demonstrate.
*** Step 2: Set up Emacs configuration
- *Option 1* (if you're convinced and want my configuration for the rest
  of your life): Backup you own =.emacs= (who knows what may happen?) if
  you have one and replace it with the content of [[https://raw.githubusercontent.com/alegrand/RR_webinars/master/1_replicable_article_laboratory_notebook/init.el][this file]].
- *Option 2* (if you only want to give a try for today): Get [[https://raw.githubusercontent.com/alegrand/RR_webinars/master/1_replicable_article_laboratory_notebook/init.el][this file]]
  and launch emacs with this specific configuration with the following
  command: =emacs -q -l init.el=
*** Step 3: Check whether the installation is working or not
Open a new instance of Emacs and open a =foo.org= file. Copy the
following lines in this file:
   : #+begin_src shell :session foo :results output :exports both
   : ls -la
   : #+end_src

Put your cursor inside this code block and execute it with the
following command: =C-c C-c= (If you are not familiar with Emacs
commands, this one means '=Ctrl + C=' twice)

A =#+RESULTS:= block with the result of the command should appear if it
worked. 

In the tutorial we will show you the main features and shortcuts of
emacs/org-mode that will help you maintain your laboratory notebook
(the =journal.org=) and benefit from literate programming. The list of
features we will demonstrate is in the [[file:journal.org::*Emacs%20shortcuts][first entry of your labbook]].
** A few information on how to play with jupyter/ipython
[[file:journal.org::*In%20case%20you%20want%20to%20play%20with%20ipython/jupyter%20on%20a%20recent%20debian][Check this entry]].
** A few information on how to play with Rstudio
[[file:journal.org::*In%20case%20you%20want%20to%20play%20with%20R/knitR/rstudio:][Check this entry]].

